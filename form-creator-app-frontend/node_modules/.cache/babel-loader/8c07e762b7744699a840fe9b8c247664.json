{"ast":null,"code":"var _jsxFileName = \"/Users/fabianlopez/Desktop/form-creator-app/form-creator-app-frontend/src/components/AddUserElementComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link, useParams } from 'react-router-dom';\nimport BuildUserElementService from '../services/BuildUserElementService';\nimport DefaultFormElementService from '../services/DefaultFormElementService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUserElementComponent = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('');\n  const [key, setKey] = useState('');\n  const [required, setRequired] = useState('');\n  const navigate = useNavigate();\n  const {\n    defaultId\n  } = useParams();\n  const {\n    formId\n  } = useParams();\n\n  const addElementToForm = e => {\n    e.preventDefault();\n    const UserFormElement = {\n      title,\n      type,\n      key,\n      required\n    };\n    BuildUserElementService.createUserFormElement(formId, UserFormElement).then(response => {\n      console.log(response.data);\n      navigate('/user-form/' + response.data.form.id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    DefaultFormElementService.getDefaultFormElementBydefaultId(defaultId).then(response => {\n      setType(response.data.type);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const pageTitle = () => {\n    let titleType;\n\n    if (defaultId == 1) {\n      titleType = \"Checkbox\";\n    } else if (defaultId == 2) {\n      titleType = \"Text Field\";\n    } else if (defaultId == 3) {\n      titleType = \"Text Area\";\n    } else {\n      titleType = \"Hidden\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Create \", titleType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-md-6 offset-md-3 offset-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\" Create \", pageTitle, \" Element\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \" Title: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter a title\",\n                  name: \"title\",\n                  className: \"form-control\",\n                  value: title,\n                  onChange: e => setTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \" Key: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter a key\",\n                  name: \"key\",\n                  className: \"form-control\",\n                  value: key,\n                  onChange: e => setKey(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \" Required: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Yes/No\",\n                  name: \"required\",\n                  className: \"form-control\",\n                  value: required,\n                  onChange: e => setRequired(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: e => addElementToForm(e),\n                children: \" Submit \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/add-element/\" + JSON.stringify(formId),\n                className: \"btn btn-danger\",\n                children: \" Cancel \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUserElementComponent, \"nQvDFQHM0VLNdyt2yGbJn6cFfkM=\", false, function () {\n  return [useNavigate, useParams, useParams];\n});\n\n_c = AddUserElementComponent;\nexport default AddUserElementComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserElementComponent\");","map":{"version":3,"sources":["/Users/fabianlopez/Desktop/form-creator-app/form-creator-app-frontend/src/components/AddUserElementComponent.js"],"names":["React","useState","useEffect","useNavigate","Link","useParams","BuildUserElementService","DefaultFormElementService","AddUserElementComponent","title","setTitle","type","setType","key","setKey","required","setRequired","navigate","defaultId","formId","addElementToForm","e","preventDefault","UserFormElement","createUserFormElement","then","response","console","log","data","form","id","catch","error","getDefaultFormElementBydefaultId","pageTitle","titleType","target","value","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useNavigate, Link, useParams} from 'react-router-dom';\nimport BuildUserElementService from '../services/BuildUserElementService';\nimport DefaultFormElementService from '../services/DefaultFormElementService'\n\nconst AddUserElementComponent = () => {\n    const [title, setTitle] = useState('')\n    const [type, setType] = useState('')\n    const [key, setKey] = useState('')\n    const [required, setRequired] = useState('')\n    const navigate = useNavigate();\n    const {defaultId} = useParams();\n    const {formId} = useParams();\n\n    const addElementToForm = (e) => {\n        e.preventDefault();\n        const UserFormElement = {title, type, key,required}\n\n        BuildUserElementService.createUserFormElement(formId,UserFormElement).then((response) =>{\n            console.log(response.data)\n            navigate('/user-form/' + response.data.form.id );\n            }).catch(error => {\n                console.log(error)\n            })\n        }\n    useEffect(() => {\n       DefaultFormElementService.getDefaultFormElementBydefaultId(defaultId).then((response) =>{\n            setType(response.data.type)\n        }).catch(error =>{\n            console.log(error)\n        })\n    }, [])\n\n    const pageTitle = () => {\n        let titleType;\n        if (defaultId == 1) {\n            titleType = \"Checkbox\";\n        } else if (defaultId == 2) {\n            titleType = \"Text Field\";\n        } else if (defaultId == 3) {\n            titleType = \"Text Area\";\n        } else {\n            titleType = \"Hidden\";\n        }\n        return <h2>Create {titleType}</h2>;\n    };\n\nreturn (\n    <div>\n        <div className = \"container\">\n            <div className = \"row\">\n                <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                <h2> Create {pageTitle} Element</h2>\n                    <div className=\"card-body\">\n                        <form>\n                            <div className=\"form-group mb-2\">\n                                <label className=\"form-label\"> Title: </label>\n                                <input\n                                    type = \"text\"\n                                    placeholder = \"Enter a title\"\n                                    name = \"title\"\n                                    className = \"form-control\"\n                                    value = {title}\n                                    onChange = {(e) => setTitle(e.target.value)}\n                                >\n                                </input>\n                            </div>\n                            <div className=\"form-group mb-2\">\n                                <label className=\"form-label\"> Key: </label>\n                                <input\n                                    type = \"text\"\n                                    placeholder = \"Enter a key\"\n                                    name = \"key\"\n                                    className = \"form-control\"\n                                    value = {key}\n                                    onChange = {(e) => setKey(e.target.value)}\n                                >\n                                </input>\n                            </div>\n                            <div className=\"form-group mb-2\">\n                                <label className=\"form-label\"> Required: </label>\n                                <input\n                                    type = \"text\"\n                                    placeholder = \"Yes/No\"\n                                    name = \"required\"\n                                    className = \"form-control\"\n                                    value = {required}\n                                    onChange = {(e) => setRequired(e.target.value)}\n                                >\n                                </input>\n                            </div>\n                            <button className = \"btn btn-success\" onClick = {(e) => addElementToForm(e) }> Submit </button>\n                            <Link to= {\"/add-element/\" + JSON.stringify(formId)} className=\"btn btn-danger\"> Cancel </Link>\n\n                        </form>\n                    </div>                \n                </div>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default AddUserElementComponent"]},"metadata":{},"sourceType":"module"}